{
  "info": {
    "name": "Node Microservice API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "node-microservice-api-collection"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/health",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "health"]
        }
      }
    },

    {
      "name": "Current Summary",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/current/summary?project={{project}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "current", "summary"],
          "query": [
            {
              "key": "project",
              "value": "{{project}}",
              "description": "Jira project key"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059) or project key (e.g., FRN)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD) - optional"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD) - optional"
            }
          ]
        },
        "description": "Returns unified current summary including Jira sprint, release, PI Planning, velocity, and sprint objectives."
      }
    },
    {
      "name": "Sprint - Get Sprint Details",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/sprint/{{sprintId}}?projectKey={{projectKey}}&includeAnalytics=true&includeObjectives=true",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "sprint", "{{sprintId}}"],
          "query": [
            {
              "key": "projectKey",
              "value": "{{projectKey}}",
              "description": "Jira project key (e.g., FRN) - use this OR boardId, not both"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059) - use this OR projectKey, not both"
            },
            {
              "key": "includeAnalytics",
              "value": "true",
              "description": "Include sprint analytics and metrics"
            },
            {
              "key": "includeObjectives",
              "value": "true",
              "description": "Include sprint objectives and story points"
            }
          ]
        },
        "description": "Returns comprehensive sprint information including basic details, analytics, and objectives."
      }
    },
    {
      "name": "Sprint - Get Sprint List",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/sprint/list?projectKey={{projectKey}}&state=active,closed,future&limit=10&includeAnalytics=false",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "sprint", "list"],
          "query": [
            {
              "key": "projectKey",
              "value": "{{projectKey}}",
              "description": "Jira project key (e.g., FRN) - use this OR boardId, not both"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059) - use this OR projectKey, not both"
            },
            {
              "key": "state",
              "value": "active,closed,future",
              "description": "Sprint state filter"
            },
            {
              "key": "limit",
              "value": "10",
              "description": "Maximum number of sprints to return"
            },
            {
              "key": "startDate",
              "value": "{{startDate}}",
              "description": "Start date filter YYYY-MM-DD"
            },
            {
              "key": "endDate",
              "value": "{{endDate}}",
              "description": "End date filter YYYY-MM-DD"
            },
            {
              "key": "sortBy",
              "value": "startDate",
              "description": "Sort by field (id, name, startDate, endDate)"
            },
            {
              "key": "sortOrder",
              "value": "desc",
              "description": "Sort order (asc, desc)"
            },
            {
              "key": "includeAnalytics",
              "value": "false",
              "description": "Include analytics for each sprint"
            }
          ]
        },
        "description": "Returns a list of sprints with filtering, sorting, and optional analytics."
      }
    },
    {
      "name": "Sprint - Get Sprint Summary",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/sprint/summary?projectKey={{projectKey}}&state=active,closed,future&limit=10",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "sprint", "summary"],
          "query": [
            {
              "key": "projectKey",
              "value": "{{projectKey}}",
              "description": "Jira project key (e.g., FRN) - use this OR boardId, not both"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059) - use this OR projectKey, not both"
            },
            {
              "key": "state",
              "value": "active,closed,future",
              "description": "Sprint state filter"
            },
            {
              "key": "limit",
              "value": "10",
              "description": "Maximum number of sprints to return"
            },
            {
              "key": "startDate",
              "value": "{{startDate}}",
              "description": "Start date filter YYYY-MM-DD"
            },
            {
              "key": "endDate",
              "value": "{{endDate}}",
              "description": "End date filter YYYY-MM-DD"
            }
          ]
        },
        "description": "Returns sprint summary with story points, team members, and efficiency metrics."
      }
    },
    {
      "name": "Velocity - Analytics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/velocity/analytics?projectKey={{projectKey}}&numSprints=6&includeChartData=true&includeGranularMetrics=true&includeTrends=true&includePredictions=false",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "velocity", "analytics"],
          "query": [
            {
              "key": "projectKey",
              "value": "{{projectKey}}",
              "description": "Jira project key (e.g., FRN) - use this OR boardId, not both"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059) - use this OR projectKey, not both"
            },
            {
              "key": "numSprints",
              "value": "6",
              "description": "Number of sprints to analyze"
            },
            {
              "key": "year",
              "value": "{{year}}",
              "description": "Filter sprints by year (e.g., 2024)"
            },
            {
              "key": "sprintPrefix",
              "value": "{{sprintPrefix}}",
              "description": "Filter sprints by name prefix"
            },
            {
              "key": "includeChartData",
              "value": "true",
              "description": "Include chart data format"
            },
            {
              "key": "includeGranularMetrics",
              "value": "true",
              "description": "Include team members and added story points for each sprint"
            },
            {
              "key": "includeTrends",
              "value": "true",
              "description": "Include trend analysis and performance insights"
            },
            {
              "key": "includePredictions",
              "value": "false",
              "description": "Include velocity predictions and forecasting"
            }
          ]
        },
        "description": "Returns comprehensive velocity analytics including summary data, chart data, granular metrics, trends analysis, and performance insights."
      }
    },
    {
      "name": "Velocity - Summary",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/velocity/summary?projectKey={{projectKey}}&numSprints=6&year={{year}}&sprintPrefix={{sprintPrefix}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "velocity", "summary"],
          "query": [
            {
              "key": "projectKey",
              "value": "{{projectKey}}",
              "description": "Jira project key (e.g., FRN) - use this OR boardId, not both"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059) - use this OR projectKey, not both"
            },
            {
              "key": "numSprints",
              "value": "6",
              "description": "Number of sprints to analyze (default 6)"
            },
            {
              "key": "year",
              "value": "{{year}}",
              "description": "Filter sprints by year (e.g., 2024)"
            },
            {
              "key": "sprintPrefix",
              "value": "{{sprintPrefix}}",
              "description": "Filter sprints by name prefix"
            }
          ]
        },
        "description": "Returns velocity, efficiency, spillover, and team size metrics for a Jira board's sprints."
      }
    },
    {
      "name": "Velocity - Sprint Details",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/velocity/sprint/{{sprintId}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "velocity", "sprint", "{{sprintId}}"]
        },
        "description": "Returns detailed velocity metrics for a specific sprint including team members, added story points, and performance analysis."
      }
    },
    {
      "name": "PI Planning - Summary",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}&sprintIncludeFilter={{sprintIncludeFilter}}&sprintExcludeFilter={{sprintExcludeFilter}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            },
            {
              "key": "sprintIncludeFilter",
              "value": "{{sprintIncludeFilter}}",
              "description": "Filter to include sprints by name (optional)"
            },
            {
              "key": "sprintExcludeFilter",
              "value": "{{sprintExcludeFilter}}",
              "description": "Filter to exclude sprints by name (optional)"
            }
          ]
        },
        "description": "Returns complete PI Planning data including sprints, story points breakdown, PI epics, releases, current sprints, and sprint details."
      }
    },
    {
      "name": "PI Planning - Epic Breakdown",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/epic-breakdown?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "epic-breakdown"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns epic breakdown with story points, status, and additional information."
      }
    },
    {
      "name": "PI Planning - Sprint Breakdown",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/sprint-breakdown?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "sprint-breakdown"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns sprint breakdown with story points and status information."
      }
    },
    {
      "name": "PI Planning - Story Points Analysis",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/story-points?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "story-points"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns detailed story points analysis with breakdown by status and epics."
      }
    },
    {
      "name": "PI Planning - Releases",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/releases?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "releases"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns release information for the PI Planning period."
      }
    },
    {
      "name": "PI Planning - Sprints",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/sprints?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "sprints"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns detailed sprint information for the PI Planning period."
      }
    },
    {
      "name": "PI Planning - Issues",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/issues?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "issues"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns list of issues for the PI Planning period."
      }
    },
    {
      "name": "PI Planning - RAG Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/rag-status?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "rag-status"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns RAG (Red, Amber, Green) status for PI Planning."
      }
    },
    {
      "name": "PI Planning - Burn-up Charts",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/burnup?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "burnup"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns burn-up chart data for PI Planning."
      }
    },
    {
      "name": "PI Planning - RAID Data",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/raid?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "raid"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns RAID (Risks, Assumptions, Issues, Dependencies) data for PI Planning."
      }
    },
    {
      "name": "PI Planning - WSJF Metrics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/wsjf?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "wsjf"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns WSJF (Weighted Shortest Job First) metrics for PI Planning."
      }
    },
    {
      "name": "PI Planning - PI Scope",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/pi-scope?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "pi-scope"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns PI scope information for PI Planning."
      }
    },
    {
      "name": "PI Planning - Progress Metrics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/pi-planning/progress?projectName={{projectName}}&boardId={{boardId}}&piStartDate={{piStartDate}}&piEndDate={{piEndDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "pi-planning", "progress"],
          "query": [
            {
              "key": "projectName",
              "value": "{{projectName}}",
              "description": "Jira project name (e.g., FRN)"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059)"
            },
            {
              "key": "piStartDate",
              "value": "{{piStartDate}}",
              "description": "PI start date (YYYY-MM-DD)"
            },
            {
              "key": "piEndDate",
              "value": "{{piEndDate}}",
              "description": "PI end date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns progress metrics for PI Planning."
      }
    },
    {
      "name": "Merge Requests Heatmap",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/merge-requests/heatmap?groupId={{groupId}}&startDate={{startDate}}&endDate={{endDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "merge-requests", "heatmap"],
          "query": [
            {
              "key": "groupId",
              "value": "{{groupId}}",
              "description": "GitLab group ID or path"
            },
            {
              "key": "startDate",
              "value": "{{startDate}}",
              "description": "Start date (YYYY-MM-DD)"
            },
            {
              "key": "endDate",
              "value": "{{endDate}}",
              "description": "End date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns per-user merge request, commit, approval, and comment stats for a GitLab group and date range."
      }
    },
    {
      "name": "Merge Requests Analytics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/merge-requests/analytics?groupId={{groupId}}&startDate={{startDate}}&endDate={{endDate}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "merge-requests", "analytics"],
          "query": [
            {
              "key": "groupId",
              "value": "{{groupId}}",
              "description": "GitLab group ID or path"
            },
            {
              "key": "startDate",
              "value": "{{startDate}}",
              "description": "Start date (YYYY-MM-DD)"
            },
            {
              "key": "endDate",
              "value": "{{endDate}}",
              "description": "End date (YYYY-MM-DD)"
            }
          ]
        },
        "description": "Returns detailed analytics for merge requests including approval times and commit metrics."
      }
    },
    {
      "name": "Orchestration Run",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/orchestration/run",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "orchestration", "run"]
        },
        "description": "Runs config-driven analytics orchestration for all projects in the config CSV."
      }
    },
    {
      "name": "Jira - Get Releases",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/jira/releases?project={{project}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "jira", "releases"],
          "query": [
            { "key": "project", "value": "{{project}}" }
          ]
        },
        "description": "Returns all releases/versions for a Jira project."
      }
    },
    {
      "name": "Jira - Get Sprints",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/jira/sprints?boardId={{boardId}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "jira", "sprints"],
          "query": [
            { "key": "boardId", "value": "{{boardId}}" }
          ]
        },
        "description": "Returns all sprints for a Jira board."
      }
    },
    {
      "name": "Jira - Get Issues",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/jira/issues?jql={{jql}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "jira", "issues"],
          "query": [
            { "key": "jql", "value": "{{jql}}" }
          ]
        },
        "description": "Returns issues based on JQL query."
      }
    },
    {
      "name": "Jira - Get Epics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/jira/epics?boardId={{boardId}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "jira", "epics"],
          "query": [
            { "key": "boardId", "value": "{{boardId}}" }
          ]
        },
        "description": "Returns all epics for a Jira board."
      }
    },

    {
      "name": "Epic - Get Epic Details",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/epic/{{epicKey}}?boardId={{boardId}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "epic", "{{epicKey}}"],
          "query": [
            { "key": "boardId", "value": "{{boardId}}" }
          ]
        },
        "description": "Returns detailed information about a specific epic."
      }
    },
    {
      "name": "Epic - Get Epic List",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/epic/list?boardId={{boardId}}&limit=10",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "epic", "list"],
          "query": [
            { "key": "boardId", "value": "{{boardId}}" },
            { "key": "limit", "value": "10" }
          ]
        },
        "description": "Returns a list of epics for a Jira board."
      }
    },
    {
      "name": "Milestone - Get Milestones",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/milestone?project={{project}}&boardId={{boardId}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "milestone"],
          "query": [
            { "key": "project", "value": "{{project}}" },
            { "key": "boardId", "value": "{{boardId}}" }
          ]
        },
        "description": "Returns milestones (Jira releases) with sprint objectives and tracking information."
      }
    },
    {
      "name": "Confluence - Update Page",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"pageId\": \"12345\",\n  \"content\": \"Updated content\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/api/v1/confluence/update",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "confluence", "update"]
        },
        "description": "Updates a Confluence page with new content."
      }
    },
    {
      "name": "Velocity - Chart Data",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/velocity/chart-data?projectKey={{projectKey}}&numSprints=6&year={{year}}&sprintPrefix={{sprintPrefix}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "velocity", "chart-data"],
          "query": [
            {
              "key": "projectKey",
              "value": "{{projectKey}}",
              "description": "Jira project key (e.g., FRN) - use this OR boardId, not both"
            },
            {
              "key": "boardId",
              "value": "{{boardId}}",
              "description": "Jira board ID (e.g., 59059) - use this OR projectKey, not both"
            },
            { "key": "numSprints", "value": "6" },
            { "key": "year", "value": "{{year}}" },
            { "key": "sprintPrefix", "value": "{{sprintPrefix}}" }
          ]
        },
        "description": "Returns velocity chart data for visualization."
      }
    },
    {
      "name": "Jira - Get Boards with Sprints",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/v1/jira/boards/with-sprints?projectKey={{projectKey}}&state={{state}}&limit={{limit}}&startDate={{startDate}}&endDate={{endDate}}&sprintIncludeFilter={{sprintIncludeFilter}}&sprintExcludeFilter={{sprintExcludeFilter}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "v1", "jira", "boards", "with-sprints"],
          "query": [
            {
              "key": "projectKey",
              "value": "{{projectKey}}",
              "description": "Jira project key (e.g., FRN)"
            },
            {
              "key": "state",
              "value": "{{state}}",
              "description": "Sprint state filter (active,closed,future)"
            },
            {
              "key": "limit",
              "value": "{{limit}}",
              "description": "Limit number of sprints per board"
            },
            {
              "key": "startDate",
              "value": "{{startDate}}",
              "description": "Start date filter (YYYY-MM-DD)"
            },
            {
              "key": "endDate",
              "value": "{{endDate}}",
              "description": "End date filter (YYYY-MM-DD)"
            },
            {
              "key": "sprintIncludeFilter",
              "value": "{{sprintIncludeFilter}}",
              "description": "Filter to include sprints by name"
            },
            {
              "key": "sprintExcludeFilter",
              "value": "{{sprintExcludeFilter}}",
              "description": "Filter to exclude sprints by name"
            }
          ]
        },
        "description": "Returns boards with their associated sprints for a project. This is a unified endpoint that combines board and sprint data."
      }
    }
  ],
  "variable": [
    { "key": "NODE_ENV", "value": "development" },
    { "key": "PORT", "value": "3000" },
    { "key": "JIRA_URL", "value": "https://dev-jira.example.com" },
    { "key": "JIRA_USER", "value": "dev_jira_user" },
    { "key": "JIRA_TOKEN", "value": "dev_jira_token" },
    { "key": "GITLAB_TOKEN", "value": "dev_gitlab_token" },
    { "key": "GITLAB_HOST", "value": "https://gitlab.dev.example.com" },
    { "key": "CONFLUENCE_URL", "value": "https://dev-confluence.example.com" },
    { "key": "project", "value": "FRN", "description": "Jira project key" },
    { "key": "projectKey", "value": "FRN", "description": "Jira project key (e.g., FRN)" },
    { "key": "projectName", "value": "FRN", "description": "Jira project name (e.g., FRN)" },
    { "key": "boardId", "value": "59059", "description": "Jira board ID (e.g., 59059)" },
    { "key": "piStartDate", "value": "2024-01-01", "description": "PI start date (YYYY-MM-DD)" },
    { "key": "piEndDate", "value": "2024-03-31", "description": "PI end date (YYYY-MM-DD)" },
    { "key": "groupId", "value": "123", "description": "GitLab group ID or path" },
    { "key": "startDate", "value": "2024-01-01", "description": "Start date (YYYY-MM-DD)" },
    { "key": "endDate", "value": "2024-01-31", "description": "End date (YYYY-MM-DD)" },
    { "key": "numSprints", "value": "6", "description": "Number of sprints to analyze" },
    { "key": "year", "value": "2024", "description": "Year filter" },
    { "key": "sprintPrefix", "value": "Sprint", "description": "Sprint name prefix filter" },
    { "key": "sprintId", "value": "170427", "description": "Sprint ID" },
    { "key": "epicKey", "value": "FRN-123", "description": "Epic key" },
    { "key": "jql", "value": "project = FRN AND sprint in openSprints()", "description": "JQL query" }
  ]
} 